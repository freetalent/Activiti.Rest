/* 
 * Activiti REST API
 *
 * # activiti     - Activiti is battle-tested Business Process Management. Organizations across the world depend on the open source platform in a huge range of demanding situations. It supports open standards with BPMN and DMN so you can create processes that suit you.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Activiti.Rest.Client;
using Activiti.Rest.Api;
using Activiti.Rest.Model;

namespace Activiti.Rest.Test
{
    /// <summary>
    ///  Class for testing JobsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class JobsApiTests
    {
        private JobsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new JobsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of JobsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' JobsApi
            //Assert.IsInstanceOfType(typeof(JobsApi), instance, "instance is a JobsApi");
        }

        
        /// <summary>
        /// Test DeleteDeadLetterJob
        /// </summary>
        [Test]
        public void DeleteDeadLetterJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //instance.DeleteDeadLetterJob(jobId);
            
        }
        
        /// <summary>
        /// Test DeleteJob
        /// </summary>
        [Test]
        public void DeleteJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //instance.DeleteJob(jobId);
            
        }
        
        /// <summary>
        /// Test DeleteTimerJob
        /// </summary>
        [Test]
        public void DeleteTimerJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //instance.DeleteTimerJob(jobId);
            
        }
        
        /// <summary>
        /// Test ExecuteJobAction
        /// </summary>
        [Test]
        public void ExecuteJobActionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //RestActionRequest actionRequest = null;
            //instance.ExecuteJobAction(jobId, actionRequest);
            
        }
        
        /// <summary>
        /// Test GetDeadLetterJobStacktrace
        /// </summary>
        [Test]
        public void GetDeadLetterJobStacktraceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetDeadLetterJobStacktrace(jobId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetDeadletterJob
        /// </summary>
        [Test]
        public void GetDeadletterJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetDeadletterJob(jobId);
            //Assert.IsInstanceOf<JobResponse> (response, "response is JobResponse");
        }
        
        /// <summary>
        /// Test GetJob
        /// </summary>
        [Test]
        public void GetJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetJob(jobId);
            //Assert.IsInstanceOf<JobResponse> (response, "response is JobResponse");
        }
        
        /// <summary>
        /// Test GetJobStacktrace
        /// </summary>
        [Test]
        public void GetJobStacktraceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetJobStacktrace(jobId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetSuspendedJob
        /// </summary>
        [Test]
        public void GetSuspendedJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetSuspendedJob(jobId);
            //Assert.IsInstanceOf<JobResponse> (response, "response is JobResponse");
        }
        
        /// <summary>
        /// Test GetSuspendedJobStacktrace
        /// </summary>
        [Test]
        public void GetSuspendedJobStacktraceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetSuspendedJobStacktrace(jobId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetTimerJob
        /// </summary>
        [Test]
        public void GetTimerJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetTimerJob(jobId);
            //Assert.IsInstanceOf<JobResponse> (response, "response is JobResponse");
        }
        
        /// <summary>
        /// Test GetTimerJobStacktrace
        /// </summary>
        [Test]
        public void GetTimerJobStacktraceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobId = null;
            //var response = instance.GetTimerJobStacktrace(jobId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ListDeadLetterJobs
        /// </summary>
        [Test]
        public void ListDeadLetterJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string processInstanceId = null;
            //string executionId = null;
            //string processDefinitionId = null;
            //bool? timersOnly = null;
            //bool? messagesOnly = null;
            //bool? withException = null;
            //string dueBefore = null;
            //string dueAfter = null;
            //string exceptionMessage = null;
            //string tenantId = null;
            //string tenantIdLike = null;
            //bool? withoutTenantId = null;
            //bool? locked = null;
            //bool? unlocked = null;
            //string sort = null;
            //var response = instance.ListDeadLetterJobs(id, processInstanceId, executionId, processDefinitionId, timersOnly, messagesOnly, withException, dueBefore, dueAfter, exceptionMessage, tenantId, tenantIdLike, withoutTenantId, locked, unlocked, sort);
            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
        }
        
        /// <summary>
        /// Test ListJobs
        /// </summary>
        [Test]
        public void ListJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string processInstanceId = null;
            //string executionId = null;
            //string processDefinitionId = null;
            //bool? timersOnly = null;
            //bool? messagesOnly = null;
            //bool? withException = null;
            //string dueBefore = null;
            //string dueAfter = null;
            //string exceptionMessage = null;
            //string tenantId = null;
            //string tenantIdLike = null;
            //bool? withoutTenantId = null;
            //bool? locked = null;
            //bool? unlocked = null;
            //string sort = null;
            //var response = instance.ListJobs(id, processInstanceId, executionId, processDefinitionId, timersOnly, messagesOnly, withException, dueBefore, dueAfter, exceptionMessage, tenantId, tenantIdLike, withoutTenantId, locked, unlocked, sort);
            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
        }
        
        /// <summary>
        /// Test ListSuspendedJobs
        /// </summary>
        [Test]
        public void ListSuspendedJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string processInstanceId = null;
            //string executionId = null;
            //string processDefinitionId = null;
            //bool? timersOnly = null;
            //bool? messagesOnly = null;
            //bool? withException = null;
            //string dueBefore = null;
            //string dueAfter = null;
            //string exceptionMessage = null;
            //string tenantId = null;
            //string tenantIdLike = null;
            //bool? withoutTenantId = null;
            //bool? locked = null;
            //bool? unlocked = null;
            //string sort = null;
            //var response = instance.ListSuspendedJobs(id, processInstanceId, executionId, processDefinitionId, timersOnly, messagesOnly, withException, dueBefore, dueAfter, exceptionMessage, tenantId, tenantIdLike, withoutTenantId, locked, unlocked, sort);
            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
        }
        
        /// <summary>
        /// Test ListTimerJobs
        /// </summary>
        [Test]
        public void ListTimerJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string processInstanceId = null;
            //string executionId = null;
            //string processDefinitionId = null;
            //bool? timersOnly = null;
            //bool? messagesOnly = null;
            //bool? withException = null;
            //string dueBefore = null;
            //string dueAfter = null;
            //string exceptionMessage = null;
            //string tenantId = null;
            //string tenantIdLike = null;
            //bool? withoutTenantId = null;
            //bool? locked = null;
            //bool? unlocked = null;
            //string sort = null;
            //var response = instance.ListTimerJobs(id, processInstanceId, executionId, processDefinitionId, timersOnly, messagesOnly, withException, dueBefore, dueAfter, exceptionMessage, tenantId, tenantIdLike, withoutTenantId, locked, unlocked, sort);
            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
        }
        
    }

}
