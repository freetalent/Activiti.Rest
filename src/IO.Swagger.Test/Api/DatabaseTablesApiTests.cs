/* 
 * Activiti REST API
 *
 * # activiti     - Activiti is battle-tested Business Process Management. Organizations across the world depend on the open source platform in a huge range of demanding situations. It supports open standards with BPMN and DMN so you can create processes that suit you.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Activiti.Rest.Client;
using Activiti.Rest.Api;
using Activiti.Rest.Model;

namespace Activiti.Rest.Test
{
    /// <summary>
    ///  Class for testing DatabaseTablesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DatabaseTablesApiTests
    {
        private DatabaseTablesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DatabaseTablesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DatabaseTablesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DatabaseTablesApi
            //Assert.IsInstanceOfType(typeof(DatabaseTablesApi), instance, "instance is a DatabaseTablesApi");
        }

        
        /// <summary>
        /// Test GetTable
        /// </summary>
        [Test]
        public void GetTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableName = null;
            //var response = instance.GetTable(tableName);
            //Assert.IsInstanceOf<TableResponse> (response, "response is TableResponse");
        }
        
        /// <summary>
        /// Test GetTableData
        /// </summary>
        [Test]
        public void GetTableDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableName = null;
            //int? start = null;
            //int? size = null;
            //string orderAscendingColumn = null;
            //string orderDescendingColumn = null;
            //var response = instance.GetTableData(tableName, start, size, orderAscendingColumn, orderDescendingColumn);
            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
        }
        
        /// <summary>
        /// Test GetTableMetaData
        /// </summary>
        [Test]
        public void GetTableMetaDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableName = null;
            //var response = instance.GetTableMetaData(tableName);
            //Assert.IsInstanceOf<TableMetaData> (response, "response is TableMetaData");
        }
        
        /// <summary>
        /// Test GetTables
        /// </summary>
        [Test]
        public void GetTablesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            var response = instance.GetTables();
            Assert.IsInstanceOf<List<TableResponse>>(response, "response is List<TableResponse>");
        }
        
    }

}
