/* 
 * Activiti REST API
 *
 * # activiti     - Activiti is battle-tested Business Process Management. Organizations across the world depend on the open source platform in a huge range of demanding situations. It supports open standards with BPMN and DMN so you can create processes that suit you.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Activiti.Rest.Client;
using Activiti.Rest.Api;
using Activiti.Rest.Model;

namespace Activiti.Rest.Test
{
    /// <summary>
    ///  Class for testing ModelsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ModelsApiTests
    {
        private ModelsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ModelsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModelsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ModelsApi
            //Assert.IsInstanceOfType(typeof(ModelsApi), instance, "instance is a ModelsApi");
        }

        
        /// <summary>
        /// Test CreateModel
        /// </summary>
        [Test]
        public void CreateModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModelRequest body = null;
            //var response = instance.CreateModel(body);
            //Assert.IsInstanceOf<ModelResponse> (response, "response is ModelResponse");
        }
        
        /// <summary>
        /// Test DeleteModel
        /// </summary>
        [Test]
        public void DeleteModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //instance.DeleteModel(modelId);
            
        }
        
        /// <summary>
        /// Test GetModel
        /// </summary>
        [Test]
        public void GetModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //var response = instance.GetModel(modelId);
            //Assert.IsInstanceOf<ModelResponse> (response, "response is ModelResponse");
        }
        
        /// <summary>
        /// Test GetModels
        /// </summary>
        [Test]
        public void GetModelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string category = null;
            //string categoryLike = null;
            //string categoryNotEquals = null;
            //string name = null;
            //string nameLike = null;
            //string key = null;
            //string deploymentId = null;
            //int? version = null;
            //bool? latestVersion = null;
            //bool? deployed = null;
            //string tenantId = null;
            //string tenantIdLike = null;
            //bool? withoutTenantId = null;
            //string sort = null;
            //var response = instance.GetModels(id, category, categoryLike, categoryNotEquals, name, nameLike, key, deploymentId, version, latestVersion, deployed, tenantId, tenantIdLike, withoutTenantId, sort);
            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
        }
        
        /// <summary>
        /// Test UpdateModel
        /// </summary>
        [Test]
        public void UpdateModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //ModelRequest body = null;
            //var response = instance.UpdateModel(modelId, body);
            //Assert.IsInstanceOf<ModelResponse> (response, "response is ModelResponse");
        }
        
    }

}
