///* 
// * Activiti REST API
// *
// * # activiti     - Activiti is battle-tested Business Process Management. Organizations across the world depend on the open source platform in a huge range of demanding situations. It supports open standards with BPMN and DMN so you can create processes that suit you.
// *
// * OpenAPI spec version: v1
// * 
// * Generated by: https://github.com/swagger-api/swagger-codegen.git
// */

//using System;
//using System.IO;
//using System.Collections.Generic;
//using System.Collections.ObjectModel;
//using System.Linq;
//using System.Reflection;
//using RestSharp;
//using NUnit.Framework;

//using IO.Swagger.Client;
//using IO.Swagger.Api;
//using IO.Swagger.Model;

//namespace IO.Swagger.Test
//{
//    /// <summary>
//    ///  Class for testing HistoryApi
//    /// </summary>
//    /// <remarks>
//    /// This file is automatically generated by Swagger Codegen.
//    /// Please update the test case below to test the API endpoint.
//    /// </remarks>
//    [TestFixture]
//    public class HistoryApiTests
//    {
//        private HistoryApi instance;

//        /// <summary>
//        /// Setup before each unit test
//        /// </summary>
//        [SetUp]
//        public void Init()
//        {
//            instance = new HistoryApi();
//        }

//        /// <summary>
//        /// Clean up after each unit test
//        /// </summary>
//        [TearDown]
//        public void Cleanup()
//        {

//        }

//        /// <summary>
//        /// Test an instance of HistoryApi
//        /// </summary>
//        [Test]
//        public void InstanceTest()
//        {
//            // TODO uncomment below to test 'IsInstanceOfType' HistoryApi
//            //Assert.IsInstanceOfType(typeof(HistoryApi), instance, "instance is a HistoryApi");
//        }

        
//        /// <summary>
//        /// Test CreateComment
//        /// </summary>
//        [Test]
//        public void CreateCommentTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string  = null;
//            //CommentResponse body = null;
//            //var response = instance.CreateComment(, body);
//            //Assert.IsInstanceOf<CommentResponse> (response, "response is CommentResponse");
//        }
        
//        /// <summary>
//        /// Test DeleteComment
//        /// </summary>
//        [Test]
//        public void DeleteCommentTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //string commentId = null;
//            //instance.DeleteComment(processInstanceId, commentId);
            
//        }
        
//        /// <summary>
//        /// Test DeleteHitoricProcessInstance
//        /// </summary>
//        [Test]
//        public void DeleteHitoricProcessInstanceTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //instance.DeleteHitoricProcessInstance(processInstanceId);
            
//        }
        
//        /// <summary>
//        /// Test DeleteTaskInstance
//        /// </summary>
//        [Test]
//        public void DeleteTaskInstanceTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string taskId = null;
//            //instance.DeleteTaskInstance(taskId);
            
//        }
        
//        /// <summary>
//        /// Test GetComment
//        /// </summary>
//        [Test]
//        public void GetCommentTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //string commentId = null;
//            //var response = instance.GetComment(processInstanceId, commentId);
//            //Assert.IsInstanceOf<CommentResponse> (response, "response is CommentResponse");
//        }
        
//        /// <summary>
//        /// Test GetComments
//        /// </summary>
//        [Test]
//        public void GetCommentsTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //var response = instance.GetComments(processInstanceId);
//            //Assert.IsInstanceOf<List<CommentResponse>> (response, "response is List<CommentResponse>");
//        }
        
//        /// <summary>
//        /// Test GetHistoricActivityInstances
//        /// </summary>
//        [Test]
//        public void GetHistoricActivityInstancesTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string activityId = null;
//            //string activityInstanceId = null;
//            //string activityName = null;
//            //string activityType = null;
//            //string executionId = null;
//            //bool? finished = null;
//            //string taskAssignee = null;
//            //string processInstanceId = null;
//            //string processDefinitionId = null;
//            //string tenantId = null;
//            //string tenantIdLike = null;
//            //bool? withoutTenantId = null;
//            //var response = instance.GetHistoricActivityInstances(activityId, activityInstanceId, activityName, activityType, executionId, finished, taskAssignee, processInstanceId, processDefinitionId, tenantId, tenantIdLike, withoutTenantId);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test GetHistoricDetailInfo
//        /// </summary>
//        [Test]
//        public void GetHistoricDetailInfoTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string id = null;
//            //string processInstanceId = null;
//            //string executionId = null;
//            //string activityInstanceId = null;
//            //string taskId = null;
//            //bool? selectOnlyFormProperties = null;
//            //bool? selectOnlyVariableUpdates = null;
//            //var response = instance.GetHistoricDetailInfo(id, processInstanceId, executionId, activityInstanceId, taskId, selectOnlyFormProperties, selectOnlyVariableUpdates);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test GetHistoricDetailVariableData
//        /// </summary>
//        [Test]
//        public void GetHistoricDetailVariableDataTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string detailId = null;
//            //var response = instance.GetHistoricDetailVariableData(detailId);
//            //Assert.IsInstanceOf<List<byte[]>> (response, "response is List<byte[]>");
//        }
        
//        /// <summary>
//        /// Test GetHistoricInstanceVariableData
//        /// </summary>
//        [Test]
//        public void GetHistoricInstanceVariableDataTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string varInstanceId = null;
//            //var response = instance.GetHistoricInstanceVariableData(varInstanceId);
//            //Assert.IsInstanceOf<List<byte[]>> (response, "response is List<byte[]>");
//        }
        
//        /// <summary>
//        /// Test GetHistoricProcessInstance
//        /// </summary>
//        [Test]
//        public void GetHistoricProcessInstanceTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //var response = instance.GetHistoricProcessInstance(processInstanceId);
//            //Assert.IsInstanceOf<HistoricProcessInstanceResponse> (response, "response is HistoricProcessInstanceResponse");
//        }
        
//        /// <summary>
//        /// Test GetHistoricProcessInstanceVariableData
//        /// </summary>
//        [Test]
//        public void GetHistoricProcessInstanceVariableDataTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //string variableName = null;
//            //var response = instance.GetHistoricProcessInstanceVariableData(processInstanceId, variableName);
//            //Assert.IsInstanceOf<List<byte[]>> (response, "response is List<byte[]>");
//        }
        
//        /// <summary>
//        /// Test GetHistoricTaskInstanceVariableData
//        /// </summary>
//        [Test]
//        public void GetHistoricTaskInstanceVariableDataTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string taskId = null;
//            //string variableName = null;
//            //string scope = null;
//            //var response = instance.GetHistoricTaskInstanceVariableData(taskId, variableName, scope);
//            //Assert.IsInstanceOf<List<byte[]>> (response, "response is List<byte[]>");
//        }
        
//        /// <summary>
//        /// Test GetHistoricVariableInstances
//        /// </summary>
//        [Test]
//        public void GetHistoricVariableInstancesTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //string taskId = null;
//            //bool? excludeTaskVariables = null;
//            //string variableName = null;
//            //string variableNameLike = null;
//            //var response = instance.GetHistoricVariableInstances(processInstanceId, taskId, excludeTaskVariables, variableName, variableNameLike);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test GetProcessIdentityLinks
//        /// </summary>
//        [Test]
//        public void GetProcessIdentityLinksTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //var response = instance.GetProcessIdentityLinks(processInstanceId);
//            //Assert.IsInstanceOf<List<HistoricIdentityLinkResponse>> (response, "response is List<HistoricIdentityLinkResponse>");
//        }
        
//        /// <summary>
//        /// Test GetTaskIdentityLinks
//        /// </summary>
//        [Test]
//        public void GetTaskIdentityLinksTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string taskId = null;
//            //var response = instance.GetTaskIdentityLinks(taskId);
//            //Assert.IsInstanceOf<List<HistoricIdentityLinkResponse>> (response, "response is List<HistoricIdentityLinkResponse>");
//        }
        
//        /// <summary>
//        /// Test GetTaskInstance
//        /// </summary>
//        [Test]
//        public void GetTaskInstanceTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string taskId = null;
//            //var response = instance.GetTaskInstance(taskId);
//            //Assert.IsInstanceOf<HistoricTaskInstanceResponse> (response, "response is HistoricTaskInstanceResponse");
//        }
        
//        /// <summary>
//        /// Test ListHistoricProcessInstances
//        /// </summary>
//        [Test]
//        public void ListHistoricProcessInstancesTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string processInstanceId = null;
//            //string processDefinitionKey = null;
//            //string processDefinitionId = null;
//            //string businessKey = null;
//            //string involvedUser = null;
//            //bool? finished = null;
//            //string superProcessInstanceId = null;
//            //bool? excludeSubprocesses = null;
//            //string finishedAfter = null;
//            //string finishedBefore = null;
//            //string startedAfter = null;
//            //string startedBefore = null;
//            //string startedBy = null;
//            //bool? includeProcessVariables = null;
//            //string tenantId = null;
//            //string tenantIdLike = null;
//            //bool? withoutTenantId = null;
//            //var response = instance.ListHistoricProcessInstances(processInstanceId, processDefinitionKey, processDefinitionId, businessKey, involvedUser, finished, superProcessInstanceId, excludeSubprocesses, finishedAfter, finishedBefore, startedAfter, startedBefore, startedBy, includeProcessVariables, tenantId, tenantIdLike, withoutTenantId);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test ListHistoricTaskInstances
//        /// </summary>
//        [Test]
//        public void ListHistoricTaskInstancesTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //string taskId = null;
//            //string processInstanceId = null;
//            //string processDefinitionKey = null;
//            //string processDefinitionKeyLike = null;
//            //string processDefinitionId = null;
//            //string processDefinitionName = null;
//            //string processDefinitionNameLike = null;
//            //string processBusinessKey = null;
//            //string processBusinessKeyLike = null;
//            //string executionId = null;
//            //string taskDefinitionKey = null;
//            //string taskName = null;
//            //string taskNameLike = null;
//            //string taskDescription = null;
//            //string taskDescriptionLike = null;
//            //string taskCategory = null;
//            //string taskDeleteReason = null;
//            //string taskDeleteReasonLike = null;
//            //string taskAssignee = null;
//            //string taskAssigneeLike = null;
//            //string taskOwner = null;
//            //string taskOwnerLike = null;
//            //string taskInvolvedUser = null;
//            //string taskPriority = null;
//            //bool? finished = null;
//            //bool? processFinished = null;
//            //string parentTaskId = null;
//            //string dueDate = null;
//            //string dueDateAfter = null;
//            //string dueDateBefore = null;
//            //bool? withoutDueDate = null;
//            //string taskCompletedOn = null;
//            //string taskCompletedAfter = null;
//            //string taskCompletedBefore = null;
//            //string taskCreatedOn = null;
//            //string taskCreatedBefore = null;
//            //string taskCreatedAfter = null;
//            //bool? includeTaskLocalVariables = null;
//            //bool? includeProcessVariables = null;
//            //string tenantId = null;
//            //string tenantIdLike = null;
//            //bool? withoutTenantId = null;
//            //var response = instance.ListHistoricTaskInstances(taskId, processInstanceId, processDefinitionKey, processDefinitionKeyLike, processDefinitionId, processDefinitionName, processDefinitionNameLike, processBusinessKey, processBusinessKeyLike, executionId, taskDefinitionKey, taskName, taskNameLike, taskDescription, taskDescriptionLike, taskCategory, taskDeleteReason, taskDeleteReasonLike, taskAssignee, taskAssigneeLike, taskOwner, taskOwnerLike, taskInvolvedUser, taskPriority, finished, processFinished, parentTaskId, dueDate, dueDateAfter, dueDateBefore, withoutDueDate, taskCompletedOn, taskCompletedAfter, taskCompletedBefore, taskCreatedOn, taskCreatedBefore, taskCreatedAfter, includeTaskLocalVariables, includeProcessVariables, tenantId, tenantIdLike, withoutTenantId);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test QueryActivityInstances
//        /// </summary>
//        [Test]
//        public void QueryActivityInstancesTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //HistoricActivityInstanceQueryRequest body = null;
//            //var response = instance.QueryActivityInstances(body);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test QueryHistoricDetail
//        /// </summary>
//        [Test]
//        public void QueryHistoricDetailTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //HistoricDetailQueryRequest body = null;
//            //var response = instance.QueryHistoricDetail(body);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test QueryHistoricProcessInstance
//        /// </summary>
//        [Test]
//        public void QueryHistoricProcessInstanceTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //HistoricProcessInstanceQueryRequest body = null;
//            //var response = instance.QueryHistoricProcessInstance(body);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test QueryHistoricTaskInstance
//        /// </summary>
//        [Test]
//        public void QueryHistoricTaskInstanceTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //HistoricTaskInstanceQueryRequest body = null;
//            //var response = instance.QueryHistoricTaskInstance(body);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//        /// <summary>
//        /// Test QueryVariableInstances
//        /// </summary>
//        [Test]
//        public void QueryVariableInstancesTest()
//        {
//            // TODO uncomment below to test the method and replace null with proper value
//            //HistoricVariableInstanceQueryRequest body = null;
//            //var response = instance.QueryVariableInstances(body);
//            //Assert.IsInstanceOf<DataResponse> (response, "response is DataResponse");
//        }
        
//    }

//}
